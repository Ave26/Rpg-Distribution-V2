generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

type UsersAdditionalInfo {
  Dob          String
  Phone_Number Int
  email        String
}

model users {
  id              String              @id @default(auto()) @map("_id") @db.ObjectId
  additional_Info UsersAdditionalInfo @map("additional Info")
  password        String              @unique(map: "password_1")
  roles           String              @default("staff")
  username        String              @unique(map: "username_1")
  productLists    productLists[]
}

model products {
  id           String         @id @default(auto()) @map("_id") @db.ObjectId
  barcodeId    String         @unique
  category     String?
  image        String?
  price        Float?
  productName  String
  productLists productLists[]
  bin          bin[]
}

// one to many relationsShip

model productLists {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  purchaseOrder  String?
  boxType        String?
  expirationDate String?
  receiveDate    String?
  Quality        String?
  Quantity       Int?
  location       String?
  author         users?    @relation(fields: [userId], references: [id])
  userId         String    @db.ObjectId
  products       products? @relation(fields: [productsId], references: [id])
  productsId     String?   @db.ObjectId
}

model racks {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  category String?
  section  String? @unique
  bin      bin[]
}

model bin {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  maxQuantiy Int?
  column     Int?
  row        Int?
  productId  String?   @db.ObjectId
  racks      racks?    @relation(fields: [racksId], references: [id])
  racksId    String?   @db.ObjectId
  products   products? @relation(fields: [productsId], references: [id])
  productsId String?   @db.ObjectId
}
